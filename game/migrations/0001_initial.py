# Generated by Django 4.1.1 on 2022-10-05 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GameSave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="save_name", max_length=32)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date created"
                    ),
                ),
                ("current_health", models.IntegerField(verbose_name="current health")),
                (
                    "max_health",
                    models.IntegerField(default=25, verbose_name="maximum health"),
                ),
                ("attack", models.IntegerField(default=10, verbose_name="attack")),
                ("defense", models.IntegerField(default=4, verbose_name="defense")),
                ("open_options", models.JSONField()),
            ],
            options={
                "verbose_name": "game save",
                "verbose_name_plural": "game saves",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                ("slug", models.SlugField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, verbose_name="item name")),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="location id",
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="location name")),
            ],
        ),
        migrations.CreateModel(
            name="NPC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="npc name")),
                ("health", models.IntegerField(verbose_name="mob max health")),
                ("attack", models.IntegerField(verbose_name="mob attack")),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "slug",
                    models.SlugField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="tag slug",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scene",
            fields=[
                (
                    "slug",
                    models.SlugField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="scene slug",
                    ),
                ),
                ("options", models.JSONField()),
                (
                    "alive",
                    models.BooleanField(default=True, verbose_name="mob or npc alive"),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.location",
                        verbose_name="scene location",
                    ),
                ),
                (
                    "npc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.npc",
                        verbose_name="NPC",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InventoryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "game_save",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_item",
                        to="game.gamesave",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_item",
                        to="game.item",
                    ),
                ),
            ],
            options={
                "verbose_name": "inventory item",
                "verbose_name_plural": "inventory items",
            },
        ),
        migrations.AddField(
            model_name="gamesave",
            name="inventory",
            field=models.ManyToManyField(
                blank=True,
                related_name="inventory_items",
                through="game.InventoryItem",
                to="game.item",
                verbose_name="character inventory",
            ),
        ),
        migrations.AddField(
            model_name="gamesave",
            name="scene",
            field=models.ForeignKey(
                default=1,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="game.scene",
                verbose_name="character scene",
            ),
        ),
        migrations.AddField(
            model_name="gamesave",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="tags", to="game.tag", verbose_name="save tags"
            ),
        ),
        migrations.AddField(
            model_name="gamesave",
            name="user",
            field=models.ForeignKey(
                help_text="user",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="gamesave",
            constraint=models.UniqueConstraint(
                fields=("name", "user"), name="unique_save_name"
            ),
        ),
    ]
